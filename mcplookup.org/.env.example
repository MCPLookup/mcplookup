# MCPLookup.org Environment Variables
# Copy this file to .env.local for local development

# =============================================================================
# STORAGE CONFIGURATION (AUTOMATIC PROVIDER DETECTION)
# =============================================================================
# The storage system automatically detects the best provider:
# 1. Tests (NODE_ENV=test) -> In-memory storage
# 2. Production with Upstash -> Upstash Redis
# 3. Development with local Redis -> Local Redis
# 4. Fallback -> In-memory storage

# Option 1: Upstash Redis (Production - Serverless)
# Sign up at https://upstash.com and create a Redis database
UPSTASH_REDIS_REST_URL=https://your-database.upstash.io
UPSTASH_REDIS_REST_TOKEN=your-token-here

# Option 2: Local Redis (Development with Docker)
# Used by docker-compose.yml for local development
REDIS_URL=redis://localhost:6379

# Alternative local Redis configuration:
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=your-password

# Option 3: Vercel KV (Alternative to Upstash)
# KV_REST_API_URL=
# KV_REST_API_TOKEN=

# Application URLs (optional - auto-detected in most cases)
NEXT_PUBLIC_APP_URL=https://mcplookup.org
NEXT_PUBLIC_API_VERSION=v1

# DNS and Health Check Configuration (optional - sensible defaults)
DNS_RESOLVER_URL=https://cloudflare-dns.com/dns-query
HEALTH_CHECK_TIMEOUT=5000
VERIFICATION_TOKEN_TTL=86400
MAX_CONCURRENT_HEALTH_CHECKS=10

# Feature Flags (optional - enabled by default)
ENABLE_AUTO_DISCOVERY=true
ENABLE_ANALYTICS=true
ENABLE_EXTERNAL_APIS=true
ENABLE_WELL_KNOWN_DISCOVERY=true

# Authentication (Auth.js v5 - for UI features and user management)
# Generate AUTH_SECRET with: npx auth secret
AUTH_SECRET=your-secret-key-here
AUTH_URL=https://mcplookup.org

# GitHub OAuth (optional - for GitHub authentication)
# Setup: GitHub Settings > Developer settings > OAuth Apps
# Callback URL: https://mcplookup.org/api/auth/callback/github
AUTH_GITHUB_ID=your-github-client-id
AUTH_GITHUB_SECRET=your-github-client-secret

# Google OAuth (optional - for Google authentication)
# Setup: Google Cloud Console > APIs & Services > Credentials
# Callback URL: https://mcplookup.org/api/auth/callback/google
AUTH_GOOGLE_ID=your-google-client-id
AUTH_GOOGLE_SECRET=your-google-client-secret

# Email Configuration (for email/password authentication)
# Option 1: Resend (Recommended - easiest setup)
RESEND_API_KEY=re_your_api_key_here
EMAIL_FROM=noreply@yourdomain.com

# Option 2: Google Workspace SMTP (if App Passwords available)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USER=your-email@yourdomain.com
# EMAIL_PASS=your-app-password

# Option 3: Google OAuth2 (if App Passwords not available)
# GOOGLE_CLIENT_ID=your_client_id
# GOOGLE_CLIENT_SECRET=your_client_secret
# GOOGLE_REFRESH_TOKEN=your_refresh_token
# EMAIL_USER=your-email@yourdomain.com

# Option 4: Other providers
# SENDGRID_API_KEY=your_sendgrid_key
# MAILGUN_API_KEY=your_mailgun_key
# MAILGUN_DOMAIN=your_mailgun_domain

# Analytics and Monitoring (optional)
NEXT_PUBLIC_VERCEL_ANALYTICS_ID=your-analytics-id

# =============================================================================
# AI-POWERED NATURAL LANGUAGE PROCESSING (OPTIONAL)
# =============================================================================
# Enable advanced semantic understanding for natural language queries
# Without this, the system uses rule-based pattern matching (still very capable)

# Together AI (RECOMMENDED - Cheapest option with great models)
# Sign up at https://api.together.xyz/ - costs ~$0.0002-$0.0008 per query
TOGETHER_API_KEY=your-together-api-key-here
TOGETHER_MODEL=meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo

# OpenRouter (GREAT ALTERNATIVE - Access to 300+ models)
# Sign up at https://openrouter.ai/ - costs vary by model, many free options
# Free models: meta-llama/llama-3.1-8b-instruct:free, google/gemma-2-9b-it:free
# Cheap models: meta-llama/llama-3.1-8b-instruct (~$0.0001/query)
# Premium models: anthropic/claude-3.5-sonnet (~$0.003/query - still 5x cheaper than OpenAI)
OPENROUTER_API_KEY=your-openrouter-api-key-here
OPENROUTER_MODEL=meta-llama/llama-3.1-8b-instruct:free

# Other AI Providers (future support)
# ANTHROPIC_API_KEY=your-anthropic-key
# GOOGLE_AI_API_KEY=your-google-ai-key

# Development Settings (optional)
NODE_ENV=development
MOCK_DNS_VERIFICATION=false
ENABLE_DEBUG_LOGGING=false

# =============================================================================
# FLEXIBLE STORAGE - NO MANDATORY DATABASE!
# =============================================================================
# This application works with multiple storage options:
#
# ✅ In-Memory (Default) - Zero infrastructure, perfect for development/testing
# ✅ Local Redis - Docker-based development with persistence
# ✅ Upstash Redis - Serverless production storage
#
# Unlike traditional apps, you DON'T need:
# - DATABASE_URL (PostgreSQL/MySQL)
# - Complex database migrations
# - Database hosting/management
# - Connection pooling configuration
#
# The storage abstraction automatically selects the best available option!
