# Development Docker Compose for MCPLookup.org
# Optimized for local development with hot-reloading

name: mcplookup-dev

services:
  # Redis database for local development
  redis:
    image: redis:7-alpine
    container_name: mcplookup-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  # MCPLookup Next.js application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: mcplookup-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-change-in-production
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      # Mount source code for hot-reloading (optimized for Windows)
      - ./src:/app/src:cached
      - ./public:/app/public:cached
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      - ./next.config.js:/app/next.config.js:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tailwind.config.js:/app/tailwind.config.js:ro
      - ./postcss.config.js:/app/postcss.config.js:ro
      # Use named volumes for node_modules and .next to avoid permission issues
      - node_modules_dev:/app/node_modules
      - next_cache_dev:/app/.next
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: sync
          path: ./public
          target: /app/public
        - action: restart
          path: package.json

  # Redis Commander - Web UI for Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mcplookup-redis-ui-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis_dev_data:
    driver: local
  node_modules_dev:
    driver: local
  next_cache_dev:
    driver: local
