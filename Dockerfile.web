# Multi-stage Docker build for MCPLookup.org Web App (from monorepo root)
FROM node:22-alpine AS base

# Install dependencies only when needed  
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy workspace package.json and web app package.json
COPY package.json package-lock.json* ./
COPY mcplookup.org/package.json ./mcplookup.org/
COPY mcp-sdk/package.json ./mcp-sdk/

# Install all workspace dependencies
RUN npm ci

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the web application (turbo will handle dependencies)
RUN npm run build:web

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/mcplookup.org/public ./public

# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Automatically leverage output traces to reduce image size
COPY --from=builder --chown=nextjs:nodejs /app/mcplookup.org/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/mcplookup.org/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"]
